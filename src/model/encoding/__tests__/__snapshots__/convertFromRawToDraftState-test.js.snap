// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`convert from raw tree draft content state 1`] = `
Immutable.OrderedMap {
  "A": Immutable.Record {
    "parent": null,
    "characterList": Immutable.List [],
    "data": Immutable.Map {},
    "depth": 0,
    "key": "A",
    "text": "",
    "type": "unstyled",
    "children": Array [
      "B",
      "E",
    ],
    "prevSibling": null,
    "nextSibling": null,
  },
  "B": Immutable.Record {
    "parent": "A",
    "characterList": Immutable.List [],
    "data": Immutable.Map {},
    "depth": 0,
    "key": "B",
    "text": "",
    "type": "unstyled",
    "children": Array [
      "C",
      "D",
    ],
    "prevSibling": null,
    "nextSibling": "E",
  },
  "C": Immutable.Record {
    "parent": "B",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "data": Immutable.Map {},
    "depth": 0,
    "key": "C",
    "text": "left block",
    "type": "unstyled",
    "children": Array [],
    "prevSibling": null,
    "nextSibling": "D",
  },
  "D": Immutable.Record {
    "parent": "B",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "data": Immutable.Map {},
    "depth": 0,
    "key": "D",
    "text": "right block",
    "type": "unstyled",
    "children": Array [],
    "prevSibling": "C",
    "nextSibling": null,
  },
  "E": Immutable.Record {
    "parent": "A",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "data": Immutable.Map {},
    "depth": 0,
    "key": "E",
    "text": "This is a tree based document!",
    "type": "header-one",
    "children": Array [],
    "prevSibling": "B",
    "nextSibling": null,
  },
}
`;

exports[`must be able to convert from styled blocks and entities mapped raw state 1`] = `
Immutable.OrderedMap {
  "a": Immutable.Record {
    "key": "a",
    "type": "unstyled",
    "text": "Alpha",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  "b": Immutable.Record {
    "key": "b",
    "type": "unordered-list-item",
    "text": "Bravo",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": "1",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": "1",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": "1",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": "1",
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "BOLD",
        ],
        "entity": "1",
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  "c": Immutable.Record {
    "key": "c",
    "type": "blockquote",
    "text": "Charlie",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [
          "ITALIC",
        ],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
}
`;

exports[`must map falsey block types to default value of unstyled 1`] = `
Immutable.OrderedMap {
  "A": Immutable.Record {
    "key": "A",
    "type": "unstyled",
    "text": "AAAA",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  "B": Immutable.Record {
    "key": "B",
    "type": "unstyled",
    "text": "BBBB",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
  "C": Immutable.Record {
    "key": "C",
    "type": "unstyled",
    "text": "CCCC",
    "characterList": Immutable.List [
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
      Immutable.Record {
        "style": Immutable.OrderedSet [],
        "entity": null,
      },
    ],
    "depth": 0,
    "data": Immutable.Map {},
  },
}
`;
